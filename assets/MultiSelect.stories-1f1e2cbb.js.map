{"version":3,"file":"MultiSelect.stories-1f1e2cbb.js","sources":["../../src/components/inputs/MultiSelect.tsx"],"sourcesContent":["import { DetailedHTMLProps, ReactNode, SelectHTMLAttributes, useCallback, useRef, useState } from 'react';\nimport { useClickOutside } from '../../hooks/useClickOutside';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { ArrowDownSline, ArrowUpSline } from '../../icons';\nimport { clsx } from '../../utils/clsx';\nimport { Chip } from '../chip';\nimport { DropDownMenu } from '../dropdown-menu';\nimport { FieldError } from './FieldError';\nimport { multiSelectStyles } from './multi-select.css';\n\ntype Props<TOption> = {\n  selectedOptions: TOption[];\n  disabled?: boolean;\n  errorText?: ReactNode;\n  onChangeSelect?: (selected: TOption[], name?: string) => void;\n  options: {\n    title: string;\n    value: TOption;\n  }[];\n  className?: string;\n  border?: 'black' | 'grey';\n  fullWidth?: boolean;\n  bRadius?: 8 | 10;\n  label?: string;\n  containerClassName?: string;\n  dataSAId?: string;\n} & DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\n\nexport function MultiSelect<TOption>({\n  selectedOptions,\n  disabled,\n  onChangeSelect,\n  containerClassName,\n  options,\n  errorText,\n  className,\n  border,\n  fullWidth,\n  bRadius,\n  label,\n  dataSAId,\n  ...rest\n}: Props<TOption>) {\n  const [isOpen, setOpen] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n\n  const toggle = useCallback(() => {\n    if (disabled) return;\n    setOpen(v => !v);\n  }, [disabled]);\n  const close = useCallback(() => setOpen(false), []);\n  useEventListener('keyup', close, 'Escape');\n  useClickOutside(ref, close, mainRef);\n\n  const selectItem = useCallback(\n    (optionValue: TOption) => {\n      onChangeSelect?.(selectedOptions.concat(optionValue));\n    },\n    [onChangeSelect],\n  );\n\n  const deleteItem = useCallback(\n    (optionValue: TOption) => {\n      onChangeSelect?.(selectedOptions.filter(item => item !== optionValue));\n    },\n    [onChangeSelect],\n  );\n\n  return (\n    <div className={className}>\n      <select\n        multiple\n        data-sa-id={dataSAId ? `${dataSAId}-select` : dataSAId}\n        disabled\n        value={selectedOptions as string[]}\n        className={multiSelectStyles.select}\n        {...rest}\n      >\n        {selectedOptions.map(item => (\n          <option key={`option_${item}`} value={item as string}>\n            {options.find(i => i.value === item)?.title || 'Not found'}\n          </option>\n        ))}\n      </select>\n      <div\n        onClick={toggle}\n        className={clsx(\n          multiSelectStyles.container({ disabled, error: !!errorText, opened: isOpen, border, fullWidth, bRadius }),\n          containerClassName,\n        )}\n        ref={mainRef}\n        data-sa-id={dataSAId}\n      >\n        {label ? <span className={multiSelectStyles.label}>{label}</span> : null}\n        {!selectedOptions.length ? (\n          <span className={multiSelectStyles.text({ withLabel: !!label })}>Select options</span>\n        ) : (\n          <div className={multiSelectStyles.chips({ withLabel: !!label })}>\n            {selectedOptions.map((item, index) => (\n              <Chip\n                dataSAId={dataSAId ? `${dataSAId}-chip-${index}` : dataSAId}\n                key={`chip_${item}`}\n                className={multiSelectStyles.chip}\n                color=\"secondary\"\n                onDelete={() => deleteItem(item)}\n              >\n                {options.find(i => i.value === item)?.title || 'Not Found'}\n              </Chip>\n            ))}\n          </div>\n        )}\n\n        <div>\n          {isOpen ? (\n            <ArrowUpSline className={multiSelectStyles.iconStyle} />\n          ) : (\n            <ArrowDownSline className={multiSelectStyles.iconStyle} />\n          )}\n        </div>\n        <DropDownMenu\n          menuRef={ref}\n          isOpen={isOpen}\n          mainRef={mainRef}\n          selectItem={selectItem}\n          options={options.filter(item => !selectedOptions.some(i => item.value === i))}\n          bRadius={bRadius}\n          dataSAId={dataSAId}\n        />\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n}\n"],"names":["MultiSelect","selectedOptions","disabled","onChangeSelect","containerClassName","options","errorText","className","border","fullWidth","bRadius","label","dataSAId","rest","isOpen","setOpen","useState","ref","useRef","mainRef","toggle","useCallback","v","close","useEventListener","useClickOutside","selectItem","optionValue","deleteItem","item","React","multiSelectStyles","_a","i","clsx","index","Chip","ArrowUpSline","ArrowDownSline","DropDownMenu","FieldError"],"mappings":"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"}