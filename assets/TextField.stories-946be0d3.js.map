{"version":3,"file":"TextField.stories-946be0d3.js","sources":["../../src/components/inputs/TextField.tsx"],"sourcesContent":["import { DetailedHTMLProps, FC, FocusEventHandler, InputHTMLAttributes, ReactNode, RefObject, useId, useState } from 'react';\nimport { clsx } from '../../utils/clsx';\nimport { FieldError } from './FieldError';\nimport { containerStyle, fieldEndAdornment, fieldEndIcon, fieldWrap, inputStyle, labelStyle } from './textfield.css';\n\ntype Props = {\n  label: string;\n  errorText?: ReactNode;\n  border?: 'black' | 'grey';\n  endAdornment?: ReactNode;\n  endIcon?: ReactNode;\n  bRadius?: 8 | 10;\n  containerClassName?: string;\n  inputRef?: RefObject<HTMLInputElement>;\n  dataSAId?: string;\n} & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const TextField: FC<Props> = ({\n  errorText,\n  className,\n  label,\n  onFocus,\n  onBlur,\n  disabled = false,\n  value,\n  border,\n  endAdornment,\n  endIcon,\n  bRadius,\n  containerClassName,\n  inputRef,\n  dataSAId,\n  ...rest\n}) => {\n  const [labelS, setLabelS] = useState<'simple' | 'focused'>(value ? 'focused' : 'simple');\n  const id = useId();\n\n  const handleFocus: FocusEventHandler<HTMLInputElement> = e => {\n    setLabelS('focused');\n    onFocus?.(e);\n  };\n  const handleBlur: FocusEventHandler<HTMLInputElement> = e => {\n    if (!value) {\n      setLabelS('simple');\n    }\n    onBlur?.(e);\n  };\n\n  return (\n    <div className={className}>\n      <div\n        className={clsx(\n          containerStyle({ disabled, error: !!errorText, border, withEndAdornment: !!endAdornment, bRadius }),\n          containerClassName,\n        )}\n        data-sa-id={dataSAId}\n      >\n        <div className={fieldWrap}>\n          <label htmlFor={id} className={labelStyle({ variant: labelS, disabled })}>\n            {label}\n          </label>\n          <input\n            className={inputStyle({ disabled, variant: labelS, withIcon: !!endIcon, bRadius })}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            disabled={disabled}\n            value={value}\n            ref={inputRef}\n            {...rest}\n            id={id}\n          />\n        </div>\n        {endAdornment ? <div className={fieldEndAdornment}>{endAdornment}</div> : null}\n        {endIcon ? <div className={fieldEndIcon}>{endIcon}</div> : null}\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n};\n"],"names":["TextField","errorText","className","label","onFocus","onBlur","disabled","value","border","endAdornment","endIcon","bRadius","containerClassName","inputRef","dataSAId","rest","labelS","setLabelS","useState","id","useId","handleFocus","e","handleBlur","clsx","containerStyle","fieldWrap","labelStyle","inputStyle","fieldEndAdornment","fieldEndIcon","FieldError"],"mappings":"0xCAiBO,MAAAA,EAAA,CAAA,CAA8B,UAAAC,EACnC,UAAAC,EACA,MAAAC,EACA,QAAAC,EACA,OAAAC,EACA,SAAAC,EAAA,GACW,MAAAC,EACX,OAAAC,EACA,aAAAC,EACA,QAAAC,EACA,QAAAC,EACA,mBAAAC,EACA,SAAAC,EACA,SAAAC,EACA,GAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAX,EAAA,UAAA,QAAA,EACAY,EAAAC,EAAAA,QAEAC,EAAAC,GAAA,CACEL,EAAA,SAAA,EACAb,GAAA,MAAAA,EAAAkB,EAAW,EAEbC,EAAAD,GAAA,CACEf,GACEU,EAAA,QAAA,EAEFZ,GAAA,MAAAA,EAAAiB,EAAU,EAGZ,OAAA,MAAA,cAAA,MAAA,CAAA,UAAApB,CAAA,EAAA,MAAA,cAEI,MAAC,CAAA,UAAAsB,GACYC,GAAA,CAAA,SAAAnB,EAAA,MAAA,CAAA,CAAAL,EAAA,OAAAO,EAAA,iBAAA,CAAA,CAAAC,EAAA,QAAAE,CAAA,CAAA,EACyFC,CAClG,EACF,aAAAE,CACY,EAAA,MAAA,cAAA,MAAA,CAAA,UAAAY,EAAA,EAAA,MAAA,cAAA,QAAA,CAAA,QAAAP,EAAA,UAAAQ,GAAA,CAAA,QAAAX,EAAA,SAAAV,CAAA,CAAA,GAAAH,CAAA,EAAA,MAAA,cAMV,QAAC,CAAA,UAAAyB,GAAA,CAAA,SAAAtB,EAAA,QAAAU,EAAA,SAAA,CAAA,CAAAN,EAAA,QAAAC,EAAA,EACkF,QAAAU,EACxE,OAAAE,EACD,SAAAjB,EACR,MAAAC,EACA,IAAAM,EACK,GAAAE,EACD,GAAAI,CACJ,CAAA,CAAA,EAEJV,EAAA,MAAA,cAAA,MAAA,CAAA,UAAAoB,EAAA,EAAApB,CAAA,EAAA,KAC0EC,EAAA,MAAA,cAAA,MAAA,CAAA,UAAAoB,EAAA,EAAApB,CAAA,EAAA,IACf,EAAA,MAAA,cAAAqB,GAAA,CAAA,UAAA9B,CAAA,CAAA,CAAA,CAKnE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}