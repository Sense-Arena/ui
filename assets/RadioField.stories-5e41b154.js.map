{"version":3,"file":"RadioField.stories-5e41b154.js","sources":["../../src/components/radio-button/RadioButton.tsx","../../src/components/inputs/RadioField.tsx"],"sourcesContent":["import { ChangeEvent, DetailedHTMLProps, forwardRef, InputHTMLAttributes, useCallback } from 'react';\nimport { radioBtnStyles } from './radio.css';\n\ntype Props = {\n  disabled?: boolean;\n  checked: boolean;\n  onChangeHandler: (checked: boolean) => void;\n  dataSAId?: string;\n} & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const RadioButton = forwardRef<HTMLInputElement, Props>(\n  ({ checked, onChangeHandler, disabled, dataSAId, ...rest }, ref) => {\n    const handleChange = useCallback(\n      (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeHandler(e.target.checked);\n      },\n      [onChangeHandler],\n    );\n\n    return (\n      <span className={radioBtnStyles.container({ checked, disabled })} data-sa-id={dataSAId}>\n        <input type=\"radio\" className={radioBtnStyles.input} {...rest} ref={ref} onChange={handleChange} checked={checked} />\n        <span className={radioBtnStyles.containerIcons}>\n          <svg className={radioBtnStyles.svgRound} focusable=\"false\" viewBox=\"0 0 24 24\">\n            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path>\n          </svg>\n          <svg className={radioBtnStyles.svgInside({ checked })} focusable=\"false\" viewBox=\"0 0 24 24\">\n            <path d=\"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"></path>\n          </svg>\n        </span>\n      </span>\n    );\n  },\n);\n","import { DetailedHTMLProps, FC, InputHTMLAttributes, ReactNode, useCallback, useId, useRef } from 'react';\nimport { clsx } from '../../utils/clsx';\nimport { RadioButton } from '../radio-button/RadioButton';\nimport { FieldError } from './FieldError';\nimport { radioStyles } from './radio.css';\n\ntype Props = {\n  label: ReactNode;\n  errorText?: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  radioProps?: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n  onChange?: (checked: boolean) => void;\n  border?: 'black' | 'grey';\n  bRadius?: 8 | 10;\n  containerClassName?: string;\n  dataSAId?: string;\n};\n\nexport const RadioField: FC<Props> = ({\n  errorText,\n  className,\n  label,\n  disabled = false,\n  checked,\n  radioProps = {},\n  onChange,\n  border,\n  bRadius,\n  containerClassName,\n  dataSAId,\n}) => {\n  const id = useId();\n  const ref = useRef<HTMLInputElement | null>(null);\n\n  const onChangeHandler = useCallback(\n    (c: boolean) => {\n      if (disabled) return;\n      onChange?.(!c);\n    },\n    [onChange, disabled],\n  );\n  const onClickHandler = useCallback(() => {\n    if (disabled) return;\n    onChange?.(true);\n    if (ref.current) {\n      ref.current.checked = true;\n    }\n  }, [onChange, disabled]);\n\n  return (\n    <div className={className}>\n      <div\n        className={clsx(radioStyles.containerStyle({ disabled, error: !!errorText, border, bRadius }), containerClassName)}\n        onClick={onClickHandler}\n        data-sa-id={dataSAId}\n      >\n        <RadioButton\n          id={id}\n          checked={!!checked}\n          onChangeHandler={onChangeHandler}\n          disabled={disabled}\n          {...radioProps}\n          ref={ref}\n        />\n        <label htmlFor={id} className={radioStyles.labelStyle({ disabled })}>\n          {label}\n        </label>\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n};\n"],"names":["RadioButton","forwardRef","checked","onChangeHandler","disabled","dataSAId","rest","ref","handleChange","useCallback","e","React","radioBtnStyles","RadioField","errorText","className","label","radioProps","onChange","border","bRadius","containerClassName","id","useId","useRef","c","onClickHandler","clsx","radioStyles","FieldError"],"mappings":"kyBAUO,MAAAA,EAAAC,EAAA,WAAoB,CAAA,CAAA,QAAAC,EAAA,gBAAAC,EAAA,SAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAEvB,MAAAC,EAAAC,EAAA,YAAqBC,GAAA,CAEjBP,EAAAO,EAAA,OAAA,OAAA,CAAgC,EAClC,CAAAP,CAAA,CACgB,EAGlB,OAAAQ,EAAA,cAAA,OAAA,CAAA,UAAAC,EAAA,UAAA,CAAA,QAAAV,EAAA,SAAAE,CAAA,CAAA,EAAA,aAAAC,CAAA,EAAAM,EAAA,cAAA,QAAA,CAAA,KAAA,QAAA,UAAAC,EAAA,MAAA,GAAAN,EAAA,IAAAC,EAAA,SAAAC,EAAA,QAAAN,CAAA,CAAA,EAAAS,EAAA,cAAA,OAAA,CAAA,UAAAC,EAAA,cAAA,EAAAD,EAAA,cAAA,MAAA,CAAA,UAAAC,EAAA,SAAA,UAAA,QAAA,QAAA,aAAAD,EAAA,cAAA,OAAA,CAAA,EAAA,8HAAA,CAAA,CAAA,EAAAA,EAAA,cAAA,MAAA,CAAA,UAAAC,EAAA,UAAA,CAAA,QAAAV,CAAA,CAAA,EAAA,UAAA,QAAA,QAAA,WAAA,EAAAS,EAAA,cAAA,OAAA,CAAA,EAAA,6KAAA,CAAA,CAAA,CAAA,CAAA,CAWE,CAGN,u5BCbO,MAAAE,EAAA,CAAA,CAA+B,UAAAC,EACpC,UAAAC,EACA,MAAAC,EACA,SAAAZ,EAAA,GACW,QAAAF,EACX,WAAAe,EAAA,CAAA,EACc,SAAAC,EACd,OAAAC,EACA,QAAAC,EACA,mBAAAC,EACA,SAAAhB,CAEF,IAAA,CACE,MAAAiB,EAAAC,EAAAA,QACAhB,EAAAiB,SAAA,IAAA,EAEArB,EAAAM,EAAA,YAAwBgB,GAAA,CAEpBrB,GACAc,GAAA,MAAAA,EAAA,CAAAO,EAAa,EACf,CAAAP,EAAAd,CAAA,CACmB,EAErBsB,EAAAjB,EAAAA,YAAA,IAAA,CACEL,IACAc,GAAA,MAAAA,EAAA,IACAX,EAAA,UACEA,EAAA,QAAA,QAAA,IACF,EAAA,CAAAW,EAAAd,CAAA,CAAA,EAGF,OAAAO,EAAA,cAAA,MAAA,CAAA,UAAAI,CAAA,EAAAJ,EAAA,cAEI,MAAC,CAAA,UAAAgB,EAAAC,EAAA,eAAA,CAAA,SAAAxB,EAAA,MAAA,CAAA,CAAAU,EAAA,OAAAK,EAAA,QAAAC,CAAA,CAAA,EAAAC,CAAA,EACkH,QAAAK,EACxG,aAAArB,CACG,EAAAM,EAAA,cAEZX,EAAC,CAAA,GAAAsB,EACC,QAAA,CAAA,CAAApB,EACW,gBAAAC,EACX,SAAAC,EACA,GAAAa,EACI,IAAAV,CACJ,CAAA,EACFI,EAAA,cAAA,QAAA,CAAA,QAAAW,EAAA,UAAAM,EAAA,WAAA,CAAA,SAAAxB,EAAA,CAAA,EAAAY,CAAA,CAGA,EAAAL,EAAA,cAAAkB,EAAA,CAAA,UAAAf,CAAA,CAAA,CAAA,CAKR;;;;;;;;"}