{"version":3,"file":"Select.stories-43c9c412.js","sources":["../../src/components/inputs/Select.tsx"],"sourcesContent":["import { DetailedHTMLProps, ReactNode, SelectHTMLAttributes, useCallback, useRef, useState } from 'react';\nimport { useClickOutside } from '../../hooks/useClickOutside';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { ArrowDownSline, ArrowUpSline } from '../../icons';\nimport { clsx } from '../../utils/clsx';\nimport { DropDownMenu } from '../dropdown-menu';\nimport { FieldError } from './FieldError';\nimport { selectStyles } from './select.css';\n\ntype Props<TOption> = {\n  disabled?: boolean;\n  errorText?: ReactNode;\n  onChangeSelect?: (selected: TOption, name?: string) => void;\n  selectedOptionLabel: string;\n  selectedOption: TOption;\n  options: {\n    title: string;\n    value: TOption;\n  }[];\n  className?: string;\n  border?: 'black' | 'grey';\n  fullWidth?: boolean;\n  bRadius?: 8 | 10;\n  label?: string;\n  containerClassName?: string;\n} & DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\n\nexport function Select<TOption>({\n  disabled,\n  onChangeSelect,\n  selectedOptionLabel,\n  containerClassName,\n  options,\n  errorText,\n  className,\n  selectedOption,\n  border,\n  fullWidth,\n  bRadius,\n  label,\n  ...rest\n}: Props<TOption>) {\n  const [isOpen, setOpen] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n\n  const toggle = useCallback(() => {\n    if (disabled) return;\n    setOpen(v => !v);\n  }, [disabled]);\n  const close = useCallback(() => setOpen(false), []);\n  useEventListener('keyup', close, 'Escape');\n  useClickOutside(ref, close, mainRef);\n\n  const selectItem = useCallback(\n    (optionValue: TOption) => {\n      onChangeSelect?.(optionValue, rest.name);\n      close();\n    },\n    [onChangeSelect],\n  );\n\n  const valueForSelect =\n    typeof selectedOption === 'number' || typeof selectedOption === 'string' ? selectedOption : String(selectedOption);\n\n  return (\n    <div className={className}>\n      <select disabled value={valueForSelect} className={selectStyles.select} {...rest}>\n        <option value={valueForSelect}>{selectedOptionLabel}</option>\n      </select>\n      <div\n        onClick={toggle}\n        className={clsx(\n          selectStyles.container({ disabled, error: !!errorText, opened: isOpen, border, fullWidth, bRadius }),\n          containerClassName,\n        )}\n        ref={mainRef}\n      >\n        {label ? <span className={selectStyles.label}>{label}</span> : null}\n        <span className={selectStyles.text({ withLabel: !!label })}>{selectedOptionLabel}</span>\n        <div>\n          {isOpen ? (\n            <ArrowUpSline className={selectStyles.iconStyle} />\n          ) : (\n            <ArrowDownSline className={selectStyles.iconStyle} />\n          )}\n        </div>\n        <DropDownMenu\n          menuRef={ref}\n          isOpen={isOpen}\n          mainRef={mainRef}\n          selectedOption={selectedOption}\n          selectItem={selectItem}\n          options={options}\n          size=\"l\"\n          bRadius={bRadius}\n        />\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n}\n"],"names":["Select","disabled","onChangeSelect","selectedOptionLabel","containerClassName","options","errorText","className","selectedOption","border","fullWidth","bRadius","label","isOpen","setOpen","useState","ref","useRef","mainRef","toggle","useCallback","close","useEventListener","useClickOutside","selectItem","optionValue","valueForSelect","_jsxs","_jsx","select","rest","selectStyles","ArrowUpSline","iconStyle","DropDownMenu","FieldError"],"mappings":"8kCA2BO,SAAAA,EAAA,CAAyB,SAAAC,EAC9BA,eAAAA,EACAC,oBAAAA,EACAC,mBAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,eAAAA,EACAC,OAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAC,MAAAA,KACAC,CAEc,EAAA,CACd,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,EAAA,EAEAC,EAAAC,iBAAA,IAAA,EACAC,EAAAD,iBAAA,IAAA,EAEAE,EAAAC,EAAAA,QAAAA,YAAA,IAAA,CACEnB,GACAa,EAAAA,GAAAA,CAAAA,CAAAA,CAAe,EAAA,CAAAb,CAAA,CAAA,EAEjBoB,EAAAD,EAAAA,QAAAA,YAAA,IAAAN,EAAA,EAAA,EAAA,CAAA,CAAA,EACAQ,EAAAA,QAAAA,EAAAA,QAAAA,EACAC,EAAAA,EAAAA,EAAAA,CAAAA,EAEA,MAAAC,EAAAJ,sBAAAK,GAAA,CAEIvB,GAAAA,MAAAA,EAAAA,EAAAA,EAAAA,MACAmB,GAAO,EAAA,CAAAnB,CAAA,CAAA,EAKXwB,EAAA,OAAAlB,GAAA,UAAA,OAAAA,GAAA,SAAAA,EAAA,OAAAA,CAAA,EAGA,OAAAmB,EAAA,MAAA,CACE,UAAApB,EAAK,SAAA,CAAAqB,EAAA,SAAA,CACH,SAAA,GAAgB,MAAAF,EAAQA,UAAAA,EAAAA,OAAwCG,GAAAA,EAAYC,SAAAA,EAAAA,SAAAA,CAC1E,MAAAJ,EAAeA,SAAAA,CAAiBvB,CAAAA,CAAmB,CAAA,EAAAwB,EAAA,MAAA,CAErD,QAAAR,EACWA,UAAAA,EAAAA,EAAAA,UAAAA,CAEgB,SAAAlB,EAAEA,MAAAA,CAAAA,CAAAA,EAAmBK,OAAAA,EAAmBO,OAAAA,EAAQJ,UAAAA,EAAQC,QAAAA,CAAWC,CAAAA,EAAAA,CAAAA,EACxE,IAAAO,EAEfA,SAAAA,CAAAA,EAAAA,EAAAA,OAAAA,CAEI,UAAAa,EAAA,MAA8BnB,SAAAA,CAAQA,CAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAC/C,UAAAmB,EAAA,KAAA,CAAmC,UAAA,CAAA,CAAAnB,CAAeA,CAAAA,EAAO,SAAAT,CAAIA,CAAAA,EAAAA,EAAAA,MAAAA,CAC7D,SAAAU,EAAAe,EAAAI,EAAA,CAEiB,UAAAD,EAAA,SAAyBE,CAAAA,EAAAA,EAAAA,EAAAA,CAEvB,UAAAF,EAAA,SAAyBE,CAAAA,CAAU,CAAA,EAAAL,EAAAM,EAAA,CAGzC,QAAAlB,EACFA,OAAAA,EACT,QAAAE,EACA,eAAAV,EACA,WAAAgB,EACA,QAAAnB,EACA,KAAA,IACK,QAAAM,CACL,CAAA,CAAA,CACA,CAAA,EAAAiB,EAAAO,EAAA,CAEO,UAAA7B,CAAC,CAAA,CAAA,CAAwB,CAAA,CAG1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}