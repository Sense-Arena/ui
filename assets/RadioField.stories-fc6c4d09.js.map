{"version":3,"file":"RadioField.stories-fc6c4d09.js","sources":["../../src/components/radio-button/RadioButton.tsx","../../src/components/inputs/RadioField.tsx"],"sourcesContent":["import { ChangeEvent, DetailedHTMLProps, forwardRef, InputHTMLAttributes, useCallback } from 'react';\nimport { radioBtnStyles } from './radio.css';\n\ntype Props = {\n  disabled?: boolean;\n  checked: boolean;\n  onChangeHandler: (checked: boolean) => void;\n  dataSAId?: string;\n} & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const RadioButton = forwardRef<HTMLInputElement, Props>(\n  ({ checked, onChangeHandler, disabled, dataSAId, ...rest }, ref) => {\n    const handleChange = useCallback(\n      (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeHandler(e.target.checked);\n      },\n      [onChangeHandler],\n    );\n\n    return (\n      <span className={radioBtnStyles.container({ checked, disabled })} data-sa-id={dataSAId}>\n        <input type=\"radio\" className={radioBtnStyles.input} {...rest} ref={ref} onChange={handleChange} checked={checked} />\n        <span className={radioBtnStyles.containerIcons}>\n          <svg className={radioBtnStyles.svgRound} focusable=\"false\" viewBox=\"0 0 24 24\">\n            <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path>\n          </svg>\n          <svg className={radioBtnStyles.svgInside({ checked })} focusable=\"false\" viewBox=\"0 0 24 24\">\n            <path d=\"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"></path>\n          </svg>\n        </span>\n      </span>\n    );\n  },\n);\n","import { DetailedHTMLProps, FC, InputHTMLAttributes, ReactNode, useCallback, useId, useRef } from 'react';\nimport { clsx } from '../../utils/clsx';\nimport { RadioButton } from '../radio-button/RadioButton';\nimport { FieldError } from './FieldError';\nimport { radioStyles } from './radio.css';\n\ntype Props = {\n  label: ReactNode;\n  errorText?: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  radioProps?: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n  onChange?: (checked: boolean) => void;\n  border?: 'black' | 'grey';\n  bRadius?: 8 | 10;\n  containerClassName?: string;\n  dataSAId?: string;\n};\n\nexport const RadioField: FC<Props> = ({\n  errorText,\n  className,\n  label,\n  disabled = false,\n  checked,\n  radioProps = {},\n  onChange,\n  border,\n  bRadius,\n  containerClassName,\n  dataSAId,\n}) => {\n  const id = useId();\n  const ref = useRef<HTMLInputElement | null>(null);\n\n  const onChangeHandler = useCallback(\n    (c: boolean) => {\n      if (disabled) return;\n      onChange?.(!c);\n    },\n    [onChange, disabled],\n  );\n  const onClickHandler = useCallback(() => {\n    if (disabled) return;\n    onChange?.(true);\n    if (ref.current) {\n      ref.current.checked = true;\n    }\n  }, [onChange, disabled]);\n\n  return (\n    <div className={className}>\n      <div\n        className={clsx(radioStyles.containerStyle({ disabled, error: !!errorText, border, bRadius }), containerClassName)}\n        onClick={onClickHandler}\n        data-sa-id={dataSAId}\n      >\n        <RadioButton\n          id={id}\n          checked={!!checked}\n          onChangeHandler={onChangeHandler}\n          disabled={disabled}\n          {...radioProps}\n          ref={ref}\n        />\n        <label htmlFor={id} className={radioStyles.labelStyle({ disabled })}>\n          {label}\n        </label>\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n};\n"],"names":["RadioButton","forwardRef","checked","onChangeHandler","disabled","dataSAId","ref","handleChange","useCallback","e","_jsxs","radioBtnStyles","input","rest","containerIcons","svgRound","_jsx","RadioField","errorText","className","label","onChange","border","bRadius","containerClassName","id","useId","useRef","c","onClickHandler","clsx","radioStyles","radioProps","FieldError"],"mappings":"g2BAUO,MAAAA,EAAAC,EAAA,QAAA,WAAA,CAAA,CACJ,QAAAC,EAAEA,gBAAAA,EAASC,SAAAA,EAAiBC,SAAAA,KAAUC,CAAkB,EAAAC,IAAA,CACvD,MAAAC,EAAAC,sBAAAC,GAAA,CAEIN,EAAAA,EAAAA,OAAAA,OAAAA,CAAgC,EAAA,CAAAA,CAAA,CAAA,EAKpC,OAAAO,EAAA,OAAA,CACE,UAAAC,EAAA,UAAA,CAA0C,QAAAT,EAAEA,SAAAA,CAASE,CAAAA,EAAU,aAAAC,EAAeA,SAAAA,CAAAA,EAAAA,QAAAA,CAC5E,KAAA,QAAY,UAAAM,EAAA,MAAkCC,GAAAA,EAAWC,IAAAA,EAAM,SAAAN,EAAoBA,QAAAA,CAAc,CAAA,EAAAG,EAAA,OAAA,CACjG,UAAAC,EAAA,eAAgCG,SAAAA,CAAAA,EAAAA,MAAAA,CAC9B,UAAAH,EAAA,SAA+BI,UAAAA,QAAoB,QAAA,YAAgB,SAAAC,EAAA,OAAA,CACjE,EAAA,8HAAQ,CAAA,CAA8H,CAAA,EAAAA,EAAA,MAAA,CAExI,UAAAL,EAAA,UAAA,CAAyC,QAAAT,CAAEA,CAAAA,EAAS,UAAA,QAAa,QAAA,YAAgB,SAAAc,EAAA,OAAA,CAC/E,EAAA,6KAAQ,CAAA,CAA6K,CAAA,CAAA,CACjL,CAAA,CAAA,CACD,CAAA,CAGb,CAAA,spCCZK,MAAAC,EAAA,CAAA,CAA+B,UAAAC,EACpCA,UAAAA,EACAC,MAAAA,EACAC,SAAAA,EAAAA,GACW,QAAAlB,EACXA,WAAAA,EAAAA,CAAAA,EACc,SAAAmB,EACdA,OAAAA,EACAC,QAAAA,EACAC,mBAAAA,EACAC,SAAAA,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAAA,QAAAA,QACApB,EAAAqB,iBAAA,IAAA,EAEAxB,EAAAK,sBAAAoB,GAAA,CAEIxB,GACAiB,GAAAA,MAAAA,EAAAA,CAAAA,EAAa,EAAA,CAAAA,EAAAjB,CAAA,CAAA,EAIjByB,EAAArB,EAAAA,QAAAA,YAAA,IAAA,CACEJ,IACAiB,GAAAA,MAAAA,EAAAA,IACAf,EAAA,UACEA,EAAAA,QAAAA,QAAAA,IACF,EAAA,CAAAe,EAAAjB,CAAA,CAAA,EAGF,OAAAM,EAAA,MAAA,CACE,UAAAS,EAAK,SAAA,CAAAT,EAAA,MAAA,CACH,UAAAoB,EAAAC,EAAA,eAAA,CAC6C,SAAA3B,EAAEA,MAAAA,CAAAA,CAAAA,EAAmBc,OAAAA,EAAWI,QAAAA,CAAQC,CAAAA,EAAAA,CAAAA,EAA8B,QAAAM,EACxGA,aAAAA,EACGxB,SAAAA,CAAAA,EAAAA,EAAAA,CAEA,GAAAoB,EACV,QAAA,CAAA,CAAAvB,EACWA,gBAAAA,EACX,SAAAE,EACA,GAAA4B,EACIA,IAAAA,CACJ,CAAA,EAAAhB,EAAA,QAAA,CAEF,QAAAS,EAAgBA,UAAAA,EAAAA,WAAAA,CAAsC,SAAArB,CAAEA,CAAAA,EAAU,SAAAgB,CAC/DA,CAAAA,CAAAA,CACK,CAAA,EAAAJ,EAAAiB,EAAA,CAEC,UAAAf,CAAC,CAAA,CAAA,CAAwB,CAAA,CAG1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}