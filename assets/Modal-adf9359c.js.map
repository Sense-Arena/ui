{"version":3,"file":"Modal-adf9359c.js","sources":["../../src/components/modal/Modal.tsx"],"sourcesContent":["import { animated, useSpring } from '@react-spring/web';\nimport { MouseEvent, PropsWithChildren, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { CloseIcon } from '../../icons';\nimport { clsx } from '../../utils';\nimport { Card } from '../card';\nimport { IconButton } from '../icon-button';\nimport { modalStyles } from './modal.css';\n\ntype PropsModal = PropsWithChildren<{\n  open: boolean;\n  title?: ReactNode;\n  action?: ReactNode | false;\n  withPadding?: boolean;\n  withDivider?: boolean;\n  className?: string;\n  cardClassName?: string;\n  withCard?: boolean;\n  size?: 's' | 'm' | 'l';\n  handleClose: () => void;\n  paddingHeader?: boolean;\n  portalNodeId?: string;\n  dataSAId?: string;\n}>;\n\nexport const Modal = ({\n  children,\n  open,\n  title,\n  action,\n  withPadding,\n  withDivider,\n  className,\n  cardClassName,\n  withCard = true,\n  size,\n  handleClose,\n  paddingHeader = true,\n  portalNodeId = 'root',\n  dataSAId,\n}: PropsModal) => {\n  const [mounted, setMounted] = useState(open);\n  const [contentTop, setContentTop] = useState(0);\n  const [headerHeight, setHeaderHeight] = useState(0);\n\n  useEffect(() => {\n    if (mounted) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.removeProperty('overflow');\n    }\n  }, [mounted]);\n\n  const contentRef = useCallback(\n    (node: HTMLDivElement) => {\n      if (node) {\n        let headerHeight = 0;\n        const headersCollection = document.getElementsByTagName('header');\n        if (paddingHeader && headersCollection.length) {\n          headerHeight = headersCollection[0].getBoundingClientRect().height;\n          setHeaderHeight(headerHeight);\n        }\n        const bodyHeight = window.innerHeight;\n        const modalContentHeight = bodyHeight - headerHeight;\n        const contentHeight = node.getBoundingClientRect().height;\n        if (modalContentHeight > contentHeight) {\n          setContentTop(Math.round(modalContentHeight / 2 - contentHeight / 2));\n        } else {\n          setContentTop(0);\n        }\n      }\n    },\n    [children],\n  );\n\n  const styleContainer = useSpring({\n    opacity: open ? 1 : 0,\n    config: {\n      duration: 300,\n    },\n    onStart: () => {\n      if (open) {\n        setMounted(true);\n      }\n    },\n    onRest: () => {\n      if (!open) {\n        setMounted(false);\n      }\n    },\n  });\n\n  const styleContent = useSpring({\n    opacity: open ? 1 : 0,\n    transform: `translateY(${open ? `${contentTop}px` : '0px'})`,\n    config: {\n      duration: 300,\n    },\n  });\n\n  const onBGClick = (e: MouseEvent<HTMLDivElement>) => {\n    if (e.target === e.currentTarget) {\n      handleClose();\n    }\n  };\n\n  const portalNode = typeof window === 'undefined' ? null : document.getElementById(portalNodeId) || document.body;\n\n  if (!mounted || !portalNode) return null;\n\n  return createPortal(\n    <animated.div style={styleContainer} className={clsx(modalStyles.modalContainer, className)}>\n      <div\n        onClick={onBGClick}\n        style={{ paddingTop: paddingHeader ? headerHeight : 0 }}\n        className={modalStyles.modalContentWrapper}\n        data-sa-id={dataSAId}\n      >\n        <animated.div ref={contentRef} style={styleContent} className={modalStyles.modalContent({ size })}>\n          {withCard ? (\n            <div className={modalStyles.modalActionContainer}>\n              <div className={modalStyles.modalAction}>\n                {action === undefined ? (\n                  <IconButton onClick={handleClose}>\n                    <CloseIcon className={modalStyles.modalActionCloseIcon} />\n                  </IconButton>\n                ) : (\n                  action || null\n                )}\n              </div>\n\n              <Card\n                title={title}\n                withPadding={withPadding}\n                withDivider={withDivider}\n                className={cardClassName}\n                classNameHeader={modalStyles.cardHeader}\n              >\n                {children}\n              </Card>\n            </div>\n          ) : (\n            children\n          )}\n        </animated.div>\n      </div>\n    </animated.div>,\n    portalNode,\n  );\n};\n"],"names":["Modal","children","open","title","action","withPadding","withDivider","className","cardClassName","withCard","size","handleClose","paddingHeader","portalNodeId","dataSAId","mounted","setMounted","useState","contentTop","setContentTop","headerHeight","setHeaderHeight","useEffect","contentRef","useCallback","node","headerHeight2","headersCollection","modalContentHeight","contentHeight","styleContainer","useSpring","styleContent","onBGClick","e","portalNode","createPortal","React","animated","clsx","modalStyles","IconButton","CloseIcon","Card"],"mappings":"wuBAyBO,MAAAA,EAAA,CAAA,CAAe,SAAAC,EACpB,KAAAC,EACA,MAAAC,EACA,OAAAC,EACA,YAAAC,EACA,YAAAC,EACA,UAAAC,EACA,cAAAC,EACA,SAAAC,EAAA,GACW,KAAAC,EACX,YAAAC,EACA,cAAAC,EAAA,GACgB,aAAAC,EAAA,OACD,SAAAC,CAEjB,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAf,CAAA,EACA,CAAAgB,EAAAC,CAAA,EAAAF,EAAA,SAAA,CAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,CAAA,EAEAK,EAAAA,UAAA,IAAA,CACEP,EACE,SAAA,KAAA,MAAA,SAAA,SAEA,SAAA,KAAA,MAAA,eAAA,UAAA,CACF,EAAA,CAAAA,CAAA,CAAA,EAGF,MAAAQ,EAAAC,EAAA,YAAmBC,GAAA,CAEf,GAAAA,EAAA,CACE,IAAAC,EAAA,EACA,MAAAC,EAAA,SAAA,qBAAA,QAAA,EACAf,GAAAe,EAAA,SACED,EAAAC,EAAA,CAAA,EAAA,sBAAA,EAAA,OACAN,EAAAK,CAAA,GAGF,MAAAE,EADA,OAAA,YACAF,EACAG,EAAAJ,EAAA,sBAAA,EAAA,OACAG,EAAAC,EACEV,EAAA,KAAA,MAAAS,EAAA,EAAAC,EAAA,CAAA,CAAA,EAEAV,EAAA,CAAA,EAEJ,EACF,CAAAlB,CAAA,CACS,EAGX6B,EAAAC,EAAA,CAAiC,QAAA7B,EAAA,EAAA,EACX,OAAA,CACZ,SAAA,GACI,EACZ,QAAA,IAAA,CAEEA,GACEc,EAAA,EAAA,CACF,EACF,OAAA,IAAA,CAEEd,GACEc,EAAA,EAAA,CACF,CACF,CAAA,EAGFgB,EAAAD,EAAA,CAA+B,QAAA7B,EAAA,EAAA,EACT,UAAA,cAAAA,EAAA,GAAAgB,MAAA,SACgC,OAAA,CAC5C,SAAA,GACI,CACZ,CAAA,EAGFe,EAAAC,GAAA,CACEA,EAAA,SAAAA,EAAA,eACEvB,GACF,EAGFwB,EAAA,OAAA,OAAA,IAAA,KAAA,SAAA,eAAAtB,CAAA,GAAA,SAAA,KAEA,MAAA,CAAAE,GAAA,CAAAoB,EAA6B,KAE7BC,EAAA,aAAOC,EAAA,cAAAC,EAAA,IAAA,CAAA,MAAAR,EAAA,UAAAS,EAAAC,EAAA,eAAAjC,CAAA,CAAA,EAAA8B,EAAA,cAEH,MAAC,CAAA,QAAAJ,EACU,MAAA,CAAA,WAAArB,EAAAQ,EAAA,CAAA,EAC6C,UAAAoB,EAAA,oBAC/B,aAAA1B,CACX,EAAAuB,EAAA,cAAAC,EAAA,IAAA,CAAA,IAAAf,EAAA,MAAAS,EAAA,UAAAQ,EAAA,aAAA,CAAA,KAAA9B,CAAA,CAAA,CAAA,EAAAD,EAAA4B,EAAA,cAAA,MAAA,CAAA,UAAAG,EAAA,oBAAA,EAAAH,EAAA,cAAA,MAAA,CAAA,UAAAG,EAAA,WAAA,EAAApC,IAAA,OAAAiC,EAAA,cAAAI,EAAA,CAAA,QAAA9B,CAAA,EAAA0B,EAAA,cAAAK,EAAA,CAAA,UAAAF,EAAA,qBAAA,CAAA,EAAApC,GAAA,IAAA,EAAAiC,EAAA,cAeNM,EAAC,CAAA,MAAAxC,EACC,YAAAE,EACA,YAAAC,EACA,UAAAE,EACW,gBAAAgC,EAAA,UACkB,EAAAvC,CAE5B,CAAA,EAAAA,CAAA,CAMT,CAAA,EAEJkC,CACA,CAEJ"}