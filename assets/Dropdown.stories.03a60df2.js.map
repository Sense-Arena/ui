{"version":3,"file":"Dropdown.stories.03a60df2.js","sources":["../../src/hooks/useClickOutside.ts","../../src/hooks/useEventListener.ts","../../src/components/dropdown/Dropdown.tsx"],"sourcesContent":["import { MutableRefObject, useEffect } from 'react';\n\nexport const useClickOutside = <T extends HTMLElement, B extends HTMLElement = HTMLElement>(\n  ref: MutableRefObject<T | null>,\n  handler: () => void,\n  skipTargetRef?: MutableRefObject<B | null>,\n) => {\n  useEffect(() => {\n    const listener = (event: any) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target) || skipTargetRef?.current?.contains(event.target)) {\n        return;\n      }\n      handler();\n    };\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n","import { useEffect } from 'react';\n\nexport const useEventListener = <K extends keyof DocumentEventMap>(\n  eventListen: K,\n  callback: (e: DocumentEventMap[K]) => void,\n  eventKey?: string,\n) => {\n  useEffect(() => {\n    const eventHandler = (event: DocumentEventMap[K]) => {\n      if (event instanceof KeyboardEvent && event.key === eventKey) {\n        callback(event);\n      } else if (!eventKey) {\n        callback(event);\n      }\n    };\n\n    document.addEventListener(eventListen, eventHandler);\n    return () => document.removeEventListener(eventListen, eventHandler);\n  }, [eventListen, eventKey, callback]);\n};\n\nexport const useWindowListener = <K extends keyof WindowEventMap>(\n  eventListen: K,\n  callback: (e: WindowEventMap[K]) => void,\n  eventKey?: string,\n) => {\n  useEffect(() => {\n    const eventHandler = (event: WindowEventMap[K]) => {\n      if (event instanceof KeyboardEvent && event.key === eventKey) {\n        callback(event);\n      } else if (!eventKey) {\n        callback(event);\n      }\n    };\n\n    window.addEventListener(eventListen, eventHandler);\n    return () => window.removeEventListener(eventListen, eventHandler);\n  }, [eventListen, eventKey, callback]);\n};\n","import { animated as a, useSpring } from '@react-spring/web';\nimport { ReactNode, useCallback, useRef, useState } from 'react';\nimport { useClickOutside } from '../../hooks/useClickOutside';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { ArrowDownSline, ArrowUpSline } from '../../icons';\nimport { clsx } from '../../utils/clsx';\nimport { ddContainerStyle, ddIconStyle, ddMenuItemStyle, ddMenuStyle } from './dropdown.css';\n\ntype Props<TOption> = {\n  disabled?: boolean;\n  error?: boolean;\n  onSelect?: (selected: TOption) => void;\n  selectedOptionLabel: ReactNode;\n  selectedOption: TOption;\n  options: {\n    title: string;\n    value: TOption;\n  }[];\n  className?: string;\n  border?: 'black' | 'grey';\n};\n\nexport function Dropdown<TOption>({\n  disabled,\n  onSelect,\n  selectedOptionLabel,\n  options,\n  error,\n  className,\n  selectedOption,\n  border,\n}: Props<TOption>) {\n  const [isOpen, setOpen] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n  const styles = useSpring({\n    opacity: isOpen ? 1 : 0,\n    config: {\n      duration: 250,\n    },\n  });\n\n  const toggle = useCallback(() => {\n    if (disabled) return;\n    setOpen(v => !v);\n  }, [disabled]);\n  const close = useCallback(() => setOpen(false), []);\n  useEventListener('keyup', close, 'Escape');\n  useClickOutside(ref, close, mainRef);\n\n  const selectItem = useCallback(\n    (optionValue: TOption) => {\n      onSelect?.(optionValue);\n      close();\n    },\n    [onSelect],\n  );\n\n  return (\n    <div\n      onClick={toggle}\n      className={clsx(ddContainerStyle({ disabled, error, opened: isOpen, border }), className)}\n      ref={mainRef}\n    >\n      <span>{selectedOptionLabel}</span>\n      {isOpen ? <ArrowUpSline className={ddIconStyle} /> : <ArrowDownSline className={ddIconStyle} />}\n      {isOpen ? (\n        <a.div\n          style={{ ...styles, width: mainRef.current?.getClientRects()[0].width }}\n          className={ddMenuStyle}\n          ref={ref}\n          onClick={e => e.stopPropagation()}\n        >\n          {options.map(o => (\n            <div\n              onClick={() => selectItem(o.value)}\n              className={ddMenuItemStyle({ selected: o.value === selectedOption })}\n              key={String(o.value)}\n            >\n              {o.title}\n            </div>\n          ))}\n        </a.div>\n      ) : null}\n    </div>\n  );\n}\n"],"names":["useClickOutside","ref","handler","skipTargetRef","useEffect","listener","event","_a","useEventListener","eventListen","callback","eventKey","eventHandler","Dropdown","disabled","onSelect","selectedOptionLabel","options","error","className","selectedOption","isOpen","setOpen","useState","useRef","mainRef","styles","useSpring","toggle","useCallback","close","selectItem","optionValue","_jsxs","border","ddIconStyle","width","ddMenuStyle","e","_jsx","ddMenuItemStyle","title"],"mappings":"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"}