{"version":3,"file":"Button.3176561e.js","sources":["../../src/components/button/Button.tsx"],"sourcesContent":["import { ButtonHTMLAttributes, DetailedHTMLProps, forwardRef, ReactNode } from 'react';\nimport { clsx } from '../../utils/clsx';\nimport { btnIconStyle, btnStyle, btnTxtStyle } from './button.style.css';\n\nexport type ButtonProps = {\n  children?: ReactNode;\n  icon?: ReactNode;\n  size?: 'standard' | 'big' | 'small';\n  color?: 'primary' | 'secondary' | 'outline' | 'outline_secondary';\n  mode?: 'rounded' | 'square';\n  fullWidth?: boolean;\n} & Omit<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, 'ref'>;\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ children, icon, onClick, disabled, className, size, color, mode, fullWidth, ...rest }, ref) => {\n    return (\n      <button\n        disabled={disabled}\n        className={clsx(btnStyle({ size, color, mode, fullWidth }), className)}\n        onClick={disabled ? undefined : onClick}\n        {...rest}\n        ref={ref}\n      >\n        <span className={btnTxtStyle({ size, fullWidth })}>{children}</span>\n        {icon ? <span className={btnIconStyle({ color, fullWidth })}>{icon}</span> : null}\n      </button>\n    );\n  },\n);\n"],"names":["Button","forwardRef","children","icon","onClick","disabled","className","size","color","mode","fullWidth","ref","_jsxs","clsx","btnStyle","rest","_jsx","btnTxtStyle","btnIconStyle"],"mappings":"sgCAaO,MAAAA,EAAAC,EAAA,QAAA,WAAA,CAAA,CACJ,SAAAC,EAAEA,KAAAA,EAAUC,QAAAA,EAAMC,SAAAA,EAASC,UAAAA,EAAUC,KAAAA,EAAWC,MAAAA,EAAMC,KAAAA,EAAOC,UAAAA,KAAMC,CAAnE,EAAAC,IACCC,EAAA,SAAA,CACE,SAAAP,EACE,UAAAQ,EAAAC,EAAA,CACyB,KAAAP,EAAEA,MAAAA,EAAMC,KAAAA,EAAOC,UAAAA,CAAMC,CAAAA,EAAAA,CAAAA,EAA/B,QAAAL,EAAA,OAAAD,EACiBA,GAAAA,EAC5BW,IAAAA,EACJ,SAAA,CAAAC,EAAA,OAAA,CAEA,UAAAC,EAAA,CAA6B,KAAAV,EAAEA,UAAAA,CAAMG,CAAAA,EAAT,SAAAR,CAA5B,CAAA,EAAAC,EAAAa,EAAA,OAAA,CACQ,UAAAE,EAAA,CAA8B,MAAAV,EAAEA,UAAAA,CAAOE,CAAAA,EAAV,SAAAP,CAAyBA,CAAAA,EAAAA,IAAAA,CARhE,CAAA,CAWH"}