{"version":3,"file":"CheckboxField.stories-f2461f18.js","sources":["../../src/components/checkbox-button/CheckboxButton.tsx","../../src/components/inputs/CheckboxField.tsx"],"sourcesContent":["import { ChangeEvent, DetailedHTMLProps, forwardRef, InputHTMLAttributes, useCallback } from 'react';\nimport { checkboxStyles } from './checkbox.css';\ntype Props = {\n  disabled?: boolean;\n  checked: boolean;\n  onChangeHandler: (checked: boolean) => void;\n} & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const CheckboxButton = forwardRef<HTMLInputElement, Props>(({ checked, onChangeHandler, disabled, ...rest }, ref) => {\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChangeHandler(e.target.checked);\n    },\n    [onChangeHandler],\n  );\n\n  return (\n    <span className={checkboxStyles.container({ checked, disabled })}>\n      <input\n        type=\"checkbox\"\n        className={checkboxStyles.input}\n        {...rest}\n        ref={ref}\n        onChange={handleChange}\n        checked={checked}\n      />\n      <span className={checkboxStyles.containerIcons}>\n        <svg className={checkboxStyles.svgRound} focusable=\"false\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"></path>\n        </svg>\n        <svg className={checkboxStyles.svgInside({ checked })} focusable=\"false\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>{' '}\n        </svg>\n      </span>\n    </span>\n  );\n});\n","import { DetailedHTMLProps, FC, InputHTMLAttributes, MouseEvent, ReactNode, useCallback, useId, useRef } from 'react';\nimport { clsx } from '../../utils/clsx';\nimport { CheckboxButton } from '../checkbox-button/CheckboxButton';\nimport { checkStyles } from './check.css';\nimport { FieldError } from './FieldError';\n\ntype Props = {\n  label: ReactNode;\n  errorText?: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  inputProps?: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n  onChange?: (checked: boolean) => void;\n  border?: 'black' | 'grey';\n  bRadius?: 8 | 10;\n  containerClassName?: string;\n  variant?: 'field' | 'row';\n  dataSAId?: string;\n};\n\nexport const CheckboxField: FC<Props> = ({\n  errorText,\n  className,\n  label,\n  disabled = false,\n  checked,\n  inputProps = {},\n  onChange,\n  border,\n  bRadius,\n  containerClassName,\n  variant = 'field',\n  dataSAId,\n}) => {\n  const id = useId();\n  const ref = useRef<HTMLInputElement | null>(null);\n\n  const onChangeHandler = useCallback(\n    (c: boolean) => {\n      if (disabled) return;\n      onChange?.(c);\n    },\n    [onChange, disabled],\n  );\n  const onClickHandler = useCallback(\n    (e: MouseEvent<HTMLDivElement, globalThis.MouseEvent>) => {\n      e.preventDefault();\n      if (disabled) return;\n      onChangeHandler(!checked);\n      if (ref.current) {\n        ref.current.checked = !checked;\n      }\n    },\n    [onChangeHandler, disabled],\n  );\n\n  return (\n    <div className={className}>\n      <div\n        className={clsx(\n          variant === 'field'\n            ? checkStyles.containerStyle({ disabled, error: !!errorText, border, bRadius })\n            : checkStyles.containerRow({\n                disabled,\n              }),\n          containerClassName,\n        )}\n        onClick={onClickHandler}\n        data-sa-id={dataSAId}\n      >\n        <CheckboxButton\n          id={id}\n          checked={!!checked}\n          onChangeHandler={onChangeHandler}\n          disabled={disabled}\n          {...inputProps}\n          ref={ref}\n        />\n        <label htmlFor={id} className={checkStyles.labelStyle({ disabled })}>\n          {label}\n        </label>\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n};\n"],"names":["CheckboxButton","forwardRef","checked","onChangeHandler","disabled","ref","handleChange","useCallback","e","_jsxs","checkboxStyles","_jsx","input","rest","containerIcons","svgRound","CheckboxField","errorText","className","label","onChange","border","bRadius","containerClassName","dataSAId","id","useId","useRef","c","onClickHandler","clsx","variant","checkStyles","inputProps","FieldError"],"mappings":"80BAQO,MAAAA,EAAAC,EAAA,QAAA,WAAA,CAAA,CAA4D,QAAAC,EAAEA,gBAAAA,EAASC,SAAAA,KAAiBC,CAAkB,EAAAC,IAAA,CAC/G,MAAAC,EAAAC,sBAAAC,GAAA,CAEIL,EAAAA,EAAAA,OAAAA,OAAAA,CAAgC,EAAA,CAAAA,CAAA,CAAA,EAKpC,OAAAM,EAAA,OAAA,CACE,UAAAC,EAAA,UAAA,CAA0C,QAAAR,EAAEA,SAAAA,CAASE,CAAAA,EAAU,SAAA,CAAAO,EAAA,QAAA,CAC7D,KAAA,WACO,UAAAD,EAAA,MACqBE,GAAAA,EACtBC,IAAAA,EACJ,SAAAP,EACUA,QAAAA,CACV,CAAA,EAAAG,EAAA,OAAA,CAEF,UAAAC,EAAA,eAAgCI,SAAAA,CAAAA,EAAAA,MAAAA,CAC9B,UAAAJ,EAAA,SAA+BK,UAAAA,QAAoB,QAAA,YAAgB,SAAAJ,EAAA,OAAA,CACjE,EAAA,4FAAQ,CAAA,CAA4F,CAAA,EAAAF,EAAA,MAAA,CAEtG,UAAAC,EAAA,UAAA,CAAyC,QAAAR,CAAEA,CAAAA,EAAS,UAAA,QAAa,QAAA,YAAgB,SAAA,CAAAS,EAAA,OAAA,CAC/E,EAAA,qIAAQ,CAAA,EAAA,GAAA,CAAiJ,CAAA,CAAA,CACrJ,CAAA,CAAA,CACD,CAAA,CAGb,CAAA,kuCCfO,MAAAK,EAAA,CAAA,CAAkC,UAAAC,EACvCA,UAAAA,EACAC,MAAAA,EACAC,SAAAA,EAAAA,GACW,QAAAjB,EACXA,WAAAA,EAAAA,CAAAA,EACc,SAAAkB,EACdA,OAAAA,EACAC,QAAAA,EACAC,mBAAAA,EACAC,QAAAA,EAAAA,QACU,SAAAC,CAEZ,IAAA,CACE,MAAAC,EAAAC,EAAAA,QAAAA,QACArB,EAAAsB,iBAAA,IAAA,EAEAxB,EAAAI,sBAAAqB,GAAA,CAEIxB,GACAgB,GAAAA,MAAAA,EAAAA,EAAY,EAAA,CAAAA,EAAAhB,CAAA,CAAA,EAIhByB,EAAAtB,sBAAAC,GAAA,CAEIA,EAAAA,eAAAA,EACA,CAAAJ,IACAD,EAAAA,CAAAA,CAAAA,EACAE,EAAA,UACEA,EAAAA,QAAAA,QAAAA,CAAAA,GACF,EAAA,CAAAF,EAAAC,CAAA,CAAA,EAKJ,OAAAK,EAAA,MAAA,CACE,UAAAS,EAAK,SAAA,CAAAT,EAAA,MAAA,CACH,UAAAqB,EAAAC,IAAA,QAAAC,EAAA,eAAA,CAGmC,SAAA5B,EAAEA,MAAAA,CAAAA,CAAAA,EAAmBa,OAAAA,EAAWI,QAAAA,CAAQC,CAAAA,EAAAA,EAAAA,aAAAA,CAC1C,SAAAlB,CACvBA,CAAAA,EAAAA,CAAAA,EAEY,QAAAyB,EAEXA,aAAAA,EACGL,SAAAA,CAAAA,EAAAA,EAAAA,CAEG,GAAAC,EACb,QAAA,CAAA,CAAAvB,EACWA,gBAAAA,EACX,SAAAE,EACA,GAAA6B,EACIA,IAAAA,CACJ,CAAA,EAAAtB,EAAA,QAAA,CAEF,QAAAc,EAAgBA,UAAAA,EAAAA,WAAAA,CAAsC,SAAArB,CAAEA,CAAAA,EAAU,SAAAe,CAC/DA,CAAAA,CAAAA,CACK,CAAA,EAAAR,EAAAuB,EAAA,CAEC,UAAAjB,CAAC,CAAA,CAAA,CAAwB,CAAA,CAG1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}