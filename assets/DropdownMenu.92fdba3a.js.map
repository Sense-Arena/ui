{"version":3,"file":"DropdownMenu.92fdba3a.js","sources":["../../src/hooks/useClickOutside.ts","../../src/hooks/useEventListener.ts","../../src/components/dropdown-menu/DropdownMenu.tsx"],"sourcesContent":["import { MutableRefObject, useEffect } from 'react';\n\nexport const useClickOutside = <T extends HTMLElement, B extends HTMLElement = HTMLElement>(\n  ref: MutableRefObject<T | null>,\n  handler: () => void,\n  skipTargetRef?: MutableRefObject<B | null>,\n) => {\n  useEffect(() => {\n    const listener = (event: any) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target) || skipTargetRef?.current?.contains(event.target)) {\n        return;\n      }\n      handler();\n    };\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n","import { useEffect } from 'react';\n\nexport const useEventListener = <K extends keyof DocumentEventMap>(\n  eventListen: K,\n  callback: (e: DocumentEventMap[K]) => void,\n  eventKey?: string,\n) => {\n  useEffect(() => {\n    const eventHandler = (event: DocumentEventMap[K]) => {\n      if (event instanceof KeyboardEvent && event.key === eventKey) {\n        callback(event);\n      } else if (!eventKey) {\n        callback(event);\n      }\n    };\n\n    document.addEventListener(eventListen, eventHandler);\n    return () => document.removeEventListener(eventListen, eventHandler);\n  }, [eventListen, eventKey, callback]);\n};\n\nexport const useWindowListener = <K extends keyof WindowEventMap>(\n  eventListen: K,\n  callback: (e: WindowEventMap[K]) => void,\n  eventKey?: string,\n) => {\n  useEffect(() => {\n    const eventHandler = (event: WindowEventMap[K]) => {\n      if (event instanceof KeyboardEvent && event.key === eventKey) {\n        callback(event);\n      } else if (!eventKey) {\n        callback(event);\n      }\n    };\n\n    window.addEventListener(eventListen, eventHandler);\n    return () => window.removeEventListener(eventListen, eventHandler);\n  }, [eventListen, eventKey, callback]);\n};\n","import { animated as a, useSpring } from '@react-spring/web';\nimport { RefObject } from 'react';\nimport { ddMenuItemStyle, ddMenuStyle } from './dropdown-menu.css';\n\ntype Props<TOption> = {\n  isOpen: boolean;\n  mainRef: RefObject<HTMLDivElement>;\n  menuRef: RefObject<HTMLDivElement>;\n  selectedOption: TOption;\n  selectItem: (value: TOption) => void;\n  options: {\n    title: string;\n    value: TOption;\n  }[];\n  size?: 's' | 'm' | 'l';\n  bRadius?: 8 | 10;\n};\n\nexport function DropDownMenu<TOption>({\n  isOpen,\n  mainRef,\n  options,\n  selectedOption,\n  selectItem,\n  size,\n  bRadius,\n  menuRef,\n}: Props<TOption>) {\n  const styles = useSpring({\n    opacity: isOpen ? 1 : 0,\n    config: {\n      duration: 250,\n    },\n  });\n\n  if (!isOpen) return null;\n\n  return (\n    <a.div\n      style={{ ...styles, width: mainRef.current?.getClientRects()[0].width }}\n      className={ddMenuStyle({ size, bRadius })}\n      ref={menuRef}\n      onClick={e => e.stopPropagation()}\n    >\n      {options.map(o => (\n        <div\n          onClick={() => selectItem(o.value)}\n          className={ddMenuItemStyle({ selected: o.value === selectedOption })}\n          key={String(o.value)}\n        >\n          {o.title}\n        </div>\n      ))}\n    </a.div>\n  );\n}\n"],"names":["useClickOutside","ref","handler","skipTargetRef","useEffect","listener","event","_a","useEventListener","eventListen","callback","eventKey","eventHandler","DropDownMenu","isOpen","mainRef","options","selectedOption","selectItem","size","bRadius","styles","useSpring","_jsx","a","width","ddMenuStyle","menuRef","o","ddMenuItemStyle","title"],"mappings":"2OAEO,MAAMA,EAAkB,CAC7BC,EACAC,EACAC,IACG,CACHC,EAAAA,QAAAA,UAAU,IAAM,CACR,MAAAC,EAAYC,GAAe,OAE3B,CAACL,EAAI,SAAWA,EAAI,QAAQ,SAASK,EAAM,MAAM,KAAKC,EAAAJ,GAAA,YAAAA,EAAe,UAAf,YAAAI,EAAwB,SAASD,EAAM,UAGzFJ,GAAA,EAED,gBAAA,iBAAiB,YAAaG,CAAQ,EACtC,SAAA,iBAAiB,aAAcA,CAAQ,EACzC,IAAM,CACF,SAAA,oBAAoB,YAAaA,CAAQ,EACzC,SAAA,oBAAoB,aAAcA,CAAQ,CAAA,CACrD,EACC,CAACJ,EAAKC,CAAO,CAAC,CACnB,ECpBaM,EAAmB,CAC9BC,EACAC,EACAC,IACG,CACHP,EAAAA,QAAAA,UAAU,IAAM,CACR,MAAAQ,EAAgBN,GAA+B,CAC/CA,aAAiB,eAAiBA,EAAM,MAAQK,EAClDD,EAASJ,CAAK,EACJK,GACVD,EAASJ,CAAK,CAChB,EAGO,gBAAA,iBAAiBG,EAAaG,CAAY,EAC5C,IAAM,SAAS,oBAAoBH,EAAaG,CAAY,CAClE,EAAA,CAACH,EAAaE,EAAUD,CAAQ,CAAC,CACtC,2UCDO,SAAAG,EAAA,CAA+B,OAAAC,EACpCA,QAAAA,EACAC,QAAAA,EACAC,eAAAA,EACAC,WAAAA,EACAC,KAAAA,EACAC,QAAAA,EACAC,QAAAA,CAPoC,EAAA,OAUpC,MAAAC,EAAAC,EAAA,CAAyB,QAAAR,EAAA,EAAA,EACD,OAAA,CACd,SAAA,GACI,CADJ,CAAA,EAKV,OAAAA,EAEAS,EAAAC,EAAA,IAAA,CACE,MAAA,CACS,GAAAH,EAAKA,OAAAA,EAAAA,EAAAA,UAAAA,YAAAA,EAAAA,iBAAAA,GAAAA,KAAoDI,EAAzD,UAAAC,EAAA,CACgB,KAAAP,EAAEA,QAAAA,CAAMC,CAAAA,EAAT,IAAAO,EACjBA,QAAAA,GAAAA,EAAAA,gBAAAA,EAHP,SAAAX,EAAA,IAAAY,GAAAL,EAAA,MAAA,CAOI,QAAA,IAAAL,EAAAU,EAAA,KAAA,EAC2B,UAAAC,EAAA,CACE,SAAAD,EAAA,QAAAX,CAAwBA,CAAAA,EAAzB,SAAAW,EAAA,KAGvBE,EAAAA,OAAAA,EAAAA,KAAAA,CAAAA,CAAAA,CANN,CAAA,EATQ,IAoBd"}