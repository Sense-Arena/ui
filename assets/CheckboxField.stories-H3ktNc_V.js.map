{"version":3,"file":"CheckboxField.stories-H3ktNc_V.js","sources":["../../src/components/checkbox-button/CheckboxButton.tsx","../../src/components/inputs/CheckboxField.tsx"],"sourcesContent":["import { ChangeEvent, DetailedHTMLProps, forwardRef, InputHTMLAttributes, useCallback } from 'react';\nimport { checkboxStyles } from './checkbox.css';\ntype Props = {\n  disabled?: boolean;\n  checked: boolean;\n  onChangeHandler: (checked: boolean) => void;\n  dataSAId?: string;\n} & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const CheckboxButton = forwardRef<HTMLInputElement, Props>(\n  ({ checked, onChangeHandler, disabled, dataSAId, ...rest }, ref) => {\n    const handleChange = useCallback(\n      (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeHandler(e.target.checked);\n      },\n      [onChangeHandler],\n    );\n\n    return (\n      <span className={checkboxStyles.container({ checked, disabled })} data-sa-id={dataSAId}>\n        <input\n          type=\"checkbox\"\n          className={checkboxStyles.input}\n          {...rest}\n          ref={ref}\n          onChange={handleChange}\n          checked={checked}\n        />\n        <span className={checkboxStyles.containerIcons}>\n          <svg className={checkboxStyles.svgRound} focusable=\"false\" viewBox=\"0 0 24 24\">\n            <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"></path>\n          </svg>\n          <svg className={checkboxStyles.svgInside({ checked })} focusable=\"false\" viewBox=\"0 0 24 24\">\n            <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>{' '}\n          </svg>\n        </span>\n      </span>\n    );\n  },\n);\n","import { DetailedHTMLProps, FC, InputHTMLAttributes, MouseEvent, ReactNode, useCallback, useId, useRef } from 'react';\nimport { clsx } from '../../utils/clsx';\nimport { CheckboxButton } from '../checkbox-button/CheckboxButton';\nimport { checkStyles } from './check.css';\nimport { FieldError } from './FieldError';\n\ntype Props = {\n  label: ReactNode;\n  errorText?: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  checked?: boolean;\n  inputProps?: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n  onChange?: (checked: boolean) => void;\n  border?: 'black' | 'grey';\n  bRadius?: 8 | 10;\n  containerClassName?: string;\n  variant?: 'field' | 'row';\n  dataSAId?: string;\n};\n\nexport const CheckboxField: FC<Props> = ({\n  errorText,\n  className,\n  label,\n  disabled = false,\n  checked,\n  inputProps = {},\n  onChange,\n  border,\n  bRadius,\n  containerClassName,\n  variant = 'field',\n  dataSAId,\n}) => {\n  const id = useId();\n  const ref = useRef<HTMLInputElement | null>(null);\n\n  const onChangeHandler = useCallback(\n    (c: boolean) => {\n      if (disabled) return;\n      onChange?.(c);\n    },\n    [onChange, disabled],\n  );\n  const onClickHandler = useCallback(\n    (e: MouseEvent<HTMLDivElement, globalThis.MouseEvent>) => {\n      e.preventDefault();\n      if (disabled) return;\n      onChangeHandler(!checked);\n      if (ref.current) {\n        ref.current.checked = !checked;\n      }\n    },\n    [onChangeHandler, disabled],\n  );\n\n  return (\n    <div className={className}>\n      <div\n        className={clsx(\n          variant === 'field'\n            ? checkStyles.containerStyle({ disabled, error: !!errorText, border, bRadius })\n            : checkStyles.containerRow({\n                disabled,\n              }),\n          containerClassName,\n        )}\n        onClick={onClickHandler}\n        data-sa-id={dataSAId}\n      >\n        <CheckboxButton\n          id={id}\n          checked={!!checked}\n          onChangeHandler={onChangeHandler}\n          disabled={disabled}\n          {...inputProps}\n          ref={ref}\n        />\n        <label htmlFor={id} className={checkStyles.labelStyle({ disabled })}>\n          {label}\n        </label>\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n};\n"],"names":["CheckboxButton","forwardRef","checked","onChangeHandler","disabled","dataSAId","rest","ref","handleChange","useCallback","e","React","checkboxStyles","CheckboxField","errorText","className","label","inputProps","onChange","border","bRadius","containerClassName","variant","id","useId","useRef","c","onClickHandler","clsx","checkStyles","FieldError"],"mappings":"iwBASO,MAAAA,EAAAC,EAAA,WAAuB,CAAA,CAAA,QAAAC,EAAA,gBAAAC,EAAA,SAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAE1B,MAAAC,EAAAC,EAAA,YAAqBC,GAAA,CAEjBP,EAAAO,EAAA,OAAA,OAAA,CAAgC,EAClC,CAAAP,CAAA,CACgB,EAGlB,OAAAQ,EAAA,cAAA,OAAA,CAAA,UAAAC,EAAA,UAAA,CAAA,QAAAV,EAAA,SAAAE,CAAA,CAAA,EAAA,aAAAC,CAAA,EAAAM,EAAA,cAEI,QAAC,CAAA,KAAA,WACM,UAAAC,EAAA,MACqB,GAAAN,EACtB,IAAAC,EACJ,SAAAC,EACU,QAAAN,CACV,CAAA,EAAAS,EAAA,cAAA,OAAA,CAAA,UAAAC,EAAA,gBAAAD,EAAA,cAAA,MAAA,CAAA,UAAAC,EAAA,SAAA,UAAA,QAAA,QAAA,WAAA,EAAAD,EAAA,cAAA,OAAA,CAAA,EAAA,6FAAA,CAAA,EAAAA,EAAA,cAAA,MAAA,CAAA,UAAAC,EAAA,UAAA,CAAA,QAAAV,CAAA,CAAA,EAAA,UAAA,QAAA,QAAA,WAAA,EAAAS,EAAA,cAAA,OAAA,CAAA,EAAA,qIAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAUJ,CAGN,ujCClBO,MAAAE,EAAA,CAAA,CAAkC,UAAAC,EACvC,UAAAC,EACA,MAAAC,EACA,SAAAZ,EAAA,GACW,QAAAF,EACX,WAAAe,EAAA,CAAA,EACc,SAAAC,EACd,OAAAC,EACA,QAAAC,EACA,mBAAAC,EACA,QAAAC,EAAA,QACU,SAAAjB,CAEZ,IAAA,CACE,MAAAkB,EAAAC,EAAAA,QACAjB,EAAAkB,SAAA,IAAA,EAEAtB,EAAAM,EAAA,YAAwBiB,GAAA,CAEpBtB,GACAc,GAAA,MAAAA,EAAAQ,EAAY,EACd,CAAAR,EAAAd,CAAA,CACmB,EAErBuB,EAAAlB,EAAA,YAAuBC,GAAA,CAEnBA,EAAA,eAAA,EACA,CAAAN,IACAD,EAAA,CAAAD,CAAA,EACAK,EAAA,UACEA,EAAA,QAAA,QAAA,CAAAL,GACF,EACF,CAAAC,EAAAC,CAAA,CAC0B,EAG5B,OAAAO,EAAA,cAAA,MAAA,CAAA,UAAAI,CAAA,EAAAJ,EAAA,cAEI,MAAC,CAAA,UAAAiB,EACYN,IAAA,QAAAO,EAAA,eAAA,CAAA,SAAAzB,EAAA,MAAA,CAAA,CAAAU,EAAA,OAAAK,EAAA,QAAAC,CAAA,CAAA,EAAAS,EAAA,aAAA,CAGoB,SAAAzB,CACvB,CAAA,EACDiB,CACL,EACF,QAAAM,EACS,aAAAtB,CACG,EAAAM,EAAA,cAEZX,EAAC,CAAA,GAAAuB,EACC,QAAA,CAAA,CAAArB,EACW,gBAAAC,EACX,SAAAC,EACA,GAAAa,EACI,IAAAV,CACJ,CAAA,EACFI,EAAA,cAAA,QAAA,CAAA,QAAAY,EAAA,UAAAM,EAAA,WAAA,CAAA,SAAAzB,EAAA,CAAA,EAAAY,CAAA,CAGA,EAAAL,EAAA,cAAAmB,EAAA,CAAA,UAAAhB,CAAA,CAAA,CAAA,CAKR;;;;;;;;;;;;;;;;;"}