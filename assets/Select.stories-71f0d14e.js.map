{"version":3,"file":"Select.stories-71f0d14e.js","sources":["../../src/components/inputs/Select.tsx"],"sourcesContent":["import { DetailedHTMLProps, ReactNode, SelectHTMLAttributes, useCallback, useRef, useState } from 'react';\nimport { useClickOutside } from '../../hooks/useClickOutside';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { ArrowDownSline, ArrowUpSline } from '../../icons';\nimport { clsx } from '../../utils/clsx';\nimport { DropDownMenu } from '../dropdown-menu';\nimport { FieldError } from './FieldError';\nimport { selectStyles } from './select.css';\n\ntype Props<TOption> = {\n  disabled?: boolean;\n  errorText?: ReactNode;\n  onChangeSelect?: (selected: TOption, name?: string) => void;\n  selectedOptionLabel: string;\n  selectedOption: TOption;\n  options: {\n    title: string;\n    value: TOption;\n  }[];\n  className?: string;\n  border?: 'black' | 'grey';\n  fullWidth?: boolean;\n  bRadius?: 8 | 10;\n  label?: string;\n  containerClassName?: string;\n  dataSAId?: string;\n} & DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\n\nexport function Select<TOption>({\n  disabled,\n  onChangeSelect,\n  selectedOptionLabel,\n  containerClassName,\n  options,\n  errorText,\n  className,\n  selectedOption,\n  border,\n  fullWidth,\n  bRadius,\n  label,\n  dataSAId,\n  ...rest\n}: Props<TOption>) {\n  const [isOpen, setOpen] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n\n  const toggle = useCallback(() => {\n    if (disabled) return;\n    setOpen(v => !v);\n  }, [disabled]);\n  const close = useCallback(() => setOpen(false), []);\n  useEventListener('keyup', close, 'Escape');\n  useClickOutside(ref, close, mainRef);\n\n  const selectItem = useCallback(\n    (optionValue: TOption) => {\n      onChangeSelect?.(optionValue, rest.name);\n      close();\n    },\n    [onChangeSelect],\n  );\n\n  const valueForSelect =\n    typeof selectedOption === 'number' || typeof selectedOption === 'string' ? selectedOption : String(selectedOption);\n\n  return (\n    <div className={className}>\n      <select\n        data-sa-id={dataSAId ? `${dataSAId}-select` : dataSAId}\n        disabled\n        value={valueForSelect}\n        className={selectStyles.select}\n        {...rest}\n      >\n        <option value={valueForSelect}>{selectedOptionLabel}</option>\n      </select>\n      <div\n        onClick={toggle}\n        className={clsx(\n          selectStyles.container({ disabled, error: !!errorText, opened: isOpen, border, fullWidth, bRadius }),\n          containerClassName,\n        )}\n        ref={mainRef}\n        data-sa-id={dataSAId}\n      >\n        {label ? <span className={selectStyles.label}>{label}</span> : null}\n        <span className={selectStyles.text({ withLabel: !!label })}>{selectedOptionLabel}</span>\n        <div>\n          {isOpen ? (\n            <ArrowUpSline className={selectStyles.iconStyle} />\n          ) : (\n            <ArrowDownSline className={selectStyles.iconStyle} />\n          )}\n        </div>\n        <DropDownMenu\n          menuRef={ref}\n          isOpen={isOpen}\n          mainRef={mainRef}\n          selectedOption={selectedOption}\n          selectItem={selectItem}\n          options={options}\n          bRadius={bRadius}\n          dataSAId={dataSAId}\n        />\n      </div>\n      <FieldError errorText={errorText} />\n    </div>\n  );\n}\n"],"names":["Select","disabled","onChangeSelect","selectedOptionLabel","containerClassName","options","errorText","className","selectedOption","border","fullWidth","bRadius","label","dataSAId","rest","isOpen","setOpen","useState","ref","useRef","mainRef","toggle","useCallback","v","close","useEventListener","useClickOutside","selectItem","optionValue","valueForSelect","React","selectStyles","clsx","ArrowUpSline","ArrowDownSline","DropDownMenu","FieldError"],"mappings":"mgCA4BO,SAAAA,EAAA,CAAyB,SAAAC,EAC9B,eAAAC,EACA,oBAAAC,EACA,mBAAAC,EACA,QAAAC,EACA,UAAAC,EACA,UAAAC,GACA,eAAAC,EACA,OAAAC,GACA,UAAAC,GACA,QAAAC,EACA,MAAAC,EACA,SAAAC,EACA,GAAAC,CAEF,EAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAAC,SAAA,IAAA,EACAC,EAAAD,SAAA,IAAA,EAEAE,GAAAC,EAAAA,YAAA,IAAA,CACErB,GACAe,EAAAO,GAAA,CAAAA,CAAA,CAAe,EAAA,CAAAtB,CAAA,CAAA,EAEjBuB,EAAAF,EAAAA,YAAA,IAAAN,EAAA,EAAA,EAAA,CAAA,CAAA,EACAS,GAAA,QAAAD,EAAA,QAAA,EACAE,GAAAR,EAAAM,EAAAJ,CAAA,EAEA,MAAAO,GAAAL,EAAA,YAAmBM,GAAA,CAEf1B,GAAA,MAAAA,EAAA0B,EAAAd,EAAA,MACAU,GAAM,EACR,CAAAtB,CAAA,CACe,EAGjB2B,EAAA,OAAArB,GAAA,UAAA,OAAAA,GAAA,SAAAA,EAAA,OAAAA,CAAA,EAGA,OAAAsB,EAAA,cAAA,MAAA,CAAA,UAAAvB,EAAA,EAAAuB,EAAA,cAEI,SAAC,CAAA,aAAAjB,GAAA,GAAAA,WAC+C,SAAA,GACtC,MAAAgB,EACD,UAAAE,EAAA,OACiB,GAAAjB,CACpB,EAAAgB,EAAA,cAAA,SAAA,CAAA,MAAAD,CAAA,EAAA1B,CAAA,CAEgD,EAAA2B,EAAA,cAEtD,MAAC,CAAA,QAAAT,GACU,UAAAW,GACED,EAAA,UAAA,CAAA,SAAA9B,EAAA,MAAA,CAAA,CAAAK,EAAA,OAAAS,EAAA,OAAAN,GAAA,UAAAC,GAAA,QAAAC,CAAA,CAAA,EAC0FP,CACnG,EACF,IAAAgB,EACK,aAAAP,CACO,EAAAD,EAAAkB,EAAA,cAAA,OAAA,CAAA,UAAAC,EAAA,KAAA,EAAAnB,CAAA,EAAA,KAEmDkB,EAAA,cAAA,OAAA,CAAA,UAAAC,EAAA,KAAA,CAAA,UAAA,CAAA,CAAAnB,EAAA,CAAA,EAAAT,CAAA,EACkB2B,EAAA,cAAA,MAAA,KAAAf,EAAAe,EAAA,cAAAG,GAAA,CAAA,UAAAF,EAAA,SAAA,CAAA,EAAAD,EAAA,cAAAI,GAAA,CAAA,UAAAH,EAAA,SAAA,CAAA,CAAA,EAOjFD,EAAA,cACAK,GAAC,CAAA,QAAAjB,EACU,OAAAH,EACT,QAAAK,EACA,eAAAZ,EACA,WAAAmB,GACA,QAAAtB,EACA,QAAAM,EACA,SAAAE,CACA,CAAA,CACF,EAAAiB,EAAA,cAAAM,GAAA,CAAA,UAAA9B,CAAA,CAAA,CAAA,CAKR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}